README
	This PhotoAlbum model represents one page of the album where we can create shapes, resize, move, change color, or take a snapshot of the current page.
\f1  This model has total 10 classes: 2 interfaces, 1 enum, 1 abstract class, and 6 concrete classes.\
Two interfaces are IShape and IPhotoAlbum. IShape has methods that relates to shapes like Rectangle and Oval classes. It would get basic information about concrete shape classes(such as get points, get color of the shape, get name of the shape etc) so we would have access to attributes in shapes. IPhotoAlbum interface has methods for PhotoAlbum class and manage a one page of the photo album. It can create shapes, resize, move, change color, and take snapshot of the page. \
	Enum class called ShapeType represents types of shape we can create in the album and making an abstract class for shapes is efficient because all shape type concrete classes requires points and color, and share similar functionality. Furthermore six concrete classes are: CoordinatePoints, which represent x and y coordinate where the shape is going to be created, Color, color of the shape, Rectangle, one of types of shapes that requires name, and dimensions, Oval, another type of shapes, PhotoAlbum which represents the page of the album and where the actual shape is going to be created and take snapshot of the page as well, and lastly the snapshot class where it would create snapshot that stores ID, time, shapes and descriptions.\
	Rather than have every attributes inside concrete shape classes, separated coordinate points and color from them to practice separation of concerns. Moreover, created separate Snapshot class because snapshot requires ID that represents date, time , and seconds in very small decimal, it is beneficial to have separate class and get ID.}
